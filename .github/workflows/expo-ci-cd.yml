name: Expo CI/CD

on:
  workflow_dispatch:
    inputs:
      buildType:
        type: choice
        description: "Build type to run"
        options:
          - prod-apk
          - publish-expo
          - all
  push:
    branches: [dev]

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  NODE_OPTIONS: --openssl-legacy-provider

jobs:
  check-skip:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Skip CI check
        run: echo "Proceeding with workflow"

  test:
    needs: check-skip
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Install dependencies
        run: pnpm --filter web install

      - name: 🧹 Run ESLint
        run: pnpm --filter web run lint

      - name: 🎨 Run Prettier check
        run: pnpm --filter web run format

  build-and-release:
    needs: test
    if: (github.event_name == 'push' && (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main')) || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/mobile
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Install dependencies
        run: pnpm --filter mobile install

      - name: 🏗 Setup EAS CLI
        run: npm install -g eas-cli@latest

      - name: 🏗 Build shared library
        run: pnpm --filter shared build

      - name: 📱 Setup EAS build cache
        uses: actions/cache@v3
        with:
          path: ~/.eas-build-local
          key: ${{ runner.os }}-eas-build-local-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-eas-build-local-

      - name: 🔄 Verify EAS CLI installation
        run: |
          echo "EAS CLI version:"
          eas --version

          # 누락된 패키지 수동 설치
          npx expo install expo-modules-autolinking expo-modules-core expo-asset

          # Expo 의존성 정리 및 재설치
          npx expo install --fix

      - name: 📋 Update metro.config.js for SVG support
        run: |
          if [ -f ./metro.config.js ]; then
            echo "Creating backup of metro.config.js"
            cp ./metro.config.js ./metro.config.js.backup
            echo "Updating metro.config.js to CommonJS format"
            cat > ./metro.config.js << 'EOFMARKER'
          /* eslint-disable @typescript-eslint/no-var-requires */
          const { getDefaultConfig } = require('expo/metro-config');

          const config = getDefaultConfig(__dirname);

          const { transformer, resolver } = config;

          config.transformer = {
            ...transformer,
            babelTransformerPath: require.resolve('react-native-svg-transformer/expo'),
          };

          config.resolver = {
            ...resolver,
            assetExts: resolver.assetExts.filter(ext => ext !== 'svg'),
            sourceExts: [...resolver.sourceExts, 'svg'],
          };

          module.exports = config;
          EOFMARKER
            echo "metro.config.js updated to CommonJS format"
          else
            echo "metro.config.js not found"
          fi

      - name: 📱 Build Production APK
        if: github.event.inputs.buildType == 'all' || github.event.inputs.buildType == 'prod-apk' || github.event_name == 'push'
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform android --profile production-apk --local --non-interactive --output=./app-prod.apk
        env:
          NODE_ENV: production

      - name: 🚀 Publish to Expo
        if: github.event.inputs.buildType == 'all' || github.event.inputs.buildType == 'publish-expo'
        run: |
          eas update --auto
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: 🏷️ Generate build information
        id: build-info
        run: |
          VERSION=$(node -p "require('./app.json').expo.version")
          BUILD_NUMBER=$(date +%Y%m%d%H%M)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          # Generate changelog from commit messages since last tag
          if git describe --tags --abbrev=0 > /dev/null 2>&1; then
            LAST_TAG=$(git describe --tags --abbrev=0)
            git log $LAST_TAG..HEAD --pretty=format:"- %s" > changelog.md
          else
            git log --pretty=format:"- %s" -n 10 > changelog.md
          fi

      - name: 📝 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: "Release v${{ steps.build-info.outputs.version }}-${{ steps.build-info.outputs.build_number }}"
          tag_name: "v${{ steps.build-info.outputs.version }}-${{ steps.build-info.outputs.build_number }}"
          files: |
            ./frontend/mobile/app-prod.apk
          body_path: ./frontend/mobile/changelog.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 📦 Upload build artifacts to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: app-builds
          path: |
            ./app-prod.apk
          retention-days: 7
