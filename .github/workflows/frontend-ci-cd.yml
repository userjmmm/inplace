name: Frontend CI/CD for main branches
on:
  push:
    branches:
      - "**"
    paths:
      - "frontend/web/**"
      - ".github/**"
jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm --filter web install
      - name: Run ESLint
        run: pnpm --filter web run lint
      - name: Run Prettier
        run: pnpm --filter web run format
      - name: Run Tests
        run: pnpm --filter web run test

  build-and-deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm --filter web install

      - name: Run tests
        run: pnpm --filter web run test

      - name: Create and Upload Sentry Release
        if: github.ref == 'refs/heads/main'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.VITE_SENTRY_AUTH_TOKEN }}
          VITE_SENTRY_DSN: ${{ secrets.VITE_SENTRY_DSN }}
          SENTRY_ORG: inplace-na
          SENTRY_PROJECT: inplace
        run: |
          pnpm install -g @sentry/cli
          sentry-cli releases new -p $SENTRY_PROJECT ${{ github.sha }}
          sentry-cli releases set-commits --auto ${{ github.sha }} --ignore-missing
          sentry-cli releases files ${{ github.sha }} upload-sourcemaps ./web/dist
          sentry-cli releases finalize ${{ github.sha }}

      - name: Build project
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/dev' ]]; then
            pnpm --filter web run build:dev 
          else
            pnpm --filter web run build 
          fi
        env:
          VITE_KAKAO_JS_KEY: ${{ secrets.VITE_KAKAO_JS_KEY }}
          VITE_SENTRY_DSN: ${{ secrets.VITE_SENTRY_DSN }}
          VITE_GOOGLE_TAG: ${{ secrets.VITE_GOOGLE_TAG }}
          VITE_KAKAO_REST_KEY: ${{ secrets.VITE_KAKAO_REST_KEY }}
          VITE_VAPID_KEY: ${{ secrets.VITE_VAPID_KEY }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy to S3
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            # production 배포
            aws s3 sync web/dist/ s3://inplace.my --delete
            aws s3 sync web/dist/ s3://www.inplace.my --delete
            aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_ID }} --paths "/*"
          elif [[ ${{ github.ref }} == 'refs/heads/dev' ]]; then
            # dev 배포
            aws s3 sync web/dist/ s3://ecalpni-dev.inplace.my/ --delete
            aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DEV_CLOUDFRONT_ID }} --paths "/*"
          fi
